<?xml version="1.0"?>
<project name="TechDivision_AppserverAdmin" default="deploy" basedir=".">

    <property file="${basedir}/build.properties"/>
    <property file="${basedir}/build.default.properties"/>
    <property file="${basedir}/build.${os.family}.properties"/>

    <property environment="env" />

    <property name="php-src.dir" value="${basedir}/src" />
    <property name="php-test.dir" value="${basedir}/tests" />
    <property name="php-target.dir" value="${basedir}/target"/>

    <!-- ==================================================================== -->
    <!-- Cleans the directories with the generated source files               -->
    <!-- ==================================================================== -->
    <target name="clean" description="Cleans almost everything, so use carefully.">
        <delete dir="${php-target.dir}" includeemptydirs="true" quiet="false" verbose="true" failonerror="true"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Prepares all the required directories                                -->
    <!-- ==================================================================== -->
    <target name="prepare" depends="clean" description="Prepares all the required directories.">
        <mkdir dir="${php-target.dir}" />
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the target directory                           -->
    <!-- ==================================================================== -->
    <target name="copy" depends="prepare" description="Copies the sources to the target directory.">
        <copy todir="${php-target.dir}/${webapp.name}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-src.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
        <exec executable="composer.phar" dir="${php-target.dir}/${webapp.name}">
            <arg line="update"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Shim the app by using Grunt and copy the web app sources             -->
    <!-- ==================================================================== -->
    <target name="shim-it" depends="copy" description="Shim the app by using Grunt and copy the web app sources.">
        <delete dir="${basedir}/app/bower_components" includeemptydirs="true" quiet="false" verbose="true" failonerror="false"/>
        <delete dir="${basedir}/node_modules" includeemptydirs="true" quiet="false" verbose="true" failonerror="false"/>
        <exec executable="npm">
            <arg line="npm cache clean"/>
        </exec>
        <exec executable="npm">
            <arg line="install"/>
        </exec>
        <exec executable="bower">
            <arg line="cache clean"/>
        </exec>
        <exec executable="bower">
            <arg line="install"/>
        </exec>
        <exec executable="grunt"/>
        <move todir="${php-target.dir}/${webapp.name}">
            <fileset dir="${php-target.dir}/dist">
                <include name="**/*"/>
            </fileset>
        </move>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the deploy directory                           -->
    <!-- ==================================================================== -->
    <target name="deploy" depends="shim-it" description="Copies the sources to the deploy directory.">
        <copy todir="${deploy.dir}/${webapp.name}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-target.dir}/${webapp.name}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Creates a PHAR file for deployment                                   -->
    <!-- ==================================================================== -->
    <target name="create-phar" depends="shim-it" description="Creates a PHAR file for deployment.">
        <!-- install TechDivision_Phar package to create the PHAR archive -->
        <exec dir="${php-target.dir}" executable="composer">
            <arg line="require techdivision/phar dev-master" />
        </exec>
        <!-- create the PHAR archive itself from the backup sources -->
        <exec dir="${php-target.dir}" executable="vendor/bin/phar">
            <arg line="-c create -n ${php-target.dir}/${webapp.name}.phar -d ${php-target.dir}/${webapp.name}"/>
        </exec>
    </target>

    <!-- ===================================================================== -->
    <!-- Copies the .phar file to the appservers deploy directory              -->
    <!-- ===================================================================== -->
    <target name="deploy-phar" description="Copies the .phar file to the appservers deploy directory.">
        <antcall target="create-phar" description="" />
        <copy file="${php-target.dir}/${webapp.name}.phar" todir="${appserver.base.deploy.dir}" />
        <delete>
            <fileset dir="${appserver.base.deploy.dir}" includes="${webapp.name}.phar.*" />
        </delete>
        <touch file="${appserver.base.deploy.dir}/${webapp.name}.phar.dodeploy"></touch>
    </target>
	
    <!-- ==================================================================== -->
    <!-- Generates the API documentation                                      -->
    <!-- ==================================================================== -->   
    <target name="apidoc" description="Generates the API documentation.">
         <exec executable="phpdoc">
            <arg line="-t ${php-target.dir}/docs -d ${php-src.dir}"/>
         </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the code sniffer and generates a report                         -->
    <!-- ==================================================================== -->
    <target name="phpcs" description="Runs the code sniffer and generates a report.">
        <exec executable="phpcs" failonerror="true">
            <!-- call phpcs without report-file to get error message on build console -->
            <arg line="-n --extensions=php --standard=phpcs.xml src"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the copy and paste detection                                    -->
    <!-- ==================================================================== -->
    <target name="phpcpd" description="Runs the copy and paste detection.">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${php-target.dir}/reports/pmd-cpd.xml ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Generate phploc.csv                                                  -->
    <!-- ==================================================================== -->
    <target name="phploc" description="Generate phploc.csv">
        <exec executable="phploc">
            <arg line="--log-xml ${php-target.dir}/reports/phploc.xml ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPDepend tool and generats a graphs                        -->
    <!-- ==================================================================== -->
    <target name="pdepend" description="Runs the PHPDepend tool and generats a graphs.">
        <exec executable="pdepend">
            <arg line="--summary-xml=${php-target.dir}/reports/pdepend.xml --jdepend-xml=${php-target.dir}/reports/jdepend.xml --jdepend-chart=${php-target.dir}/reports/jdepend.svg --overview-pyramid=${php-target.dir}/reports/pdepend-pyramid.svg ${php-src.dir}" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHP mess detector tool                                      -->
    <!-- ==================================================================== -->
    <target name="phpmd" description="Runs the PHP Mess detector tool.">
        <exec executable="phpmd">
            <arg line="${php-src.dir} xml codesize,unusedcode --reportfile ${php-target.dir}/reports/pmd.xml" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the test sources to the target directory					  -->
    <!-- ==================================================================== -->
    <target name="copy-tests" depends="copy" description="Copies the test sources to the target directory.">
        <copy todir="${php-target.dir}">
            <fileset dir="${php-test.dir}">
                <include name="**/*" />
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPUnit tests and generates a report                        -->
    <!-- ==================================================================== -->
    <target name="run-tests" depends="copy-tests" description="Runs the PHPUnit tests and generates a report.">
        <exec executable="phpunit" dir="${php-target.dir}">
            <arg line="--bootstrap bootstrap.php --configuration phpunit.xml.dist" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPUnit tests and generates the code metrics				  -->
    <!-- ==================================================================== -->
    <target name="build" description="Runs the PHPUnit tests and generates the code metrics.">
        <antcall target="phpcs"/>
        <antcall target="run-tests"/>
        <!--
        <antcall target="apidoc"/>
        <antcall target="phpcpd"/>
        <antcall target="phploc"/>
        <antcall target="pdepend"/>
        <antcall target="phpmd"/>
        -->
    </target>

</project>